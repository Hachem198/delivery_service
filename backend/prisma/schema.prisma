// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Enums
enum Role {
  ADMIN
  CLIENT
  DELIVERY_PERSON
}
enum State {
  PENDING
  ACCEPTED
  REJECTED
  IN_PROGRESS
  DELIVERED
  CANCELLED
}

// Models

model User {
  userId    Int       @id @default(autoincrement())
  firstName String
  lastName  String
  email     String    @unique
  number    String    @unique
  password  String
  role      Role      @default(CLIENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deliveries Delivery[] @relation("ClientDeliveries") // deliveries where user is client
  assigned    Delivery[]        @relation("AssignedDeliveries")  // deliveries where user is courier
  @@index([userId])
}


model Delivery {
  id             Int      @id @default(autoincrement())
  pickUpLocation String
  pickUpDateAndTime     DateTime
  dropOffLocation   String
  service        String
  productType    String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  assignedCourierId Int?
  assignedCourier   User?    @relation("AssignedDeliveries", fields: [assignedCourierId], references: [userId])
  client         User     @relation("ClientDeliveries", fields: [clientId], references: [userId])
  clientId       Int
  state          State    @default(PENDING)
  @@index([clientId])
  @@index([assignedCourierId])
  @@index([state])
}


